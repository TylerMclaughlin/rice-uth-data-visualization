asdf <- data.table(dist = numeric(0),c.n = integer(0))
asdf
asdf[1]
unique.c.o.i <- unique(c(pwdist.single.c$compartment.i,pwdist.single.c$compartment.j))
by.pair.extreme.dt <- data.table()
for(i in 1:length(unique.c.o.i))
{
# id of ith unique compartment number
current.cmpt <- unique.c.o.i[i]
around.one.cmpt <- pwdist.single.c[(compartment.i == current.cmpt) | (compartment.j == current.cmpt)]
by.pair.extreme.dt[,':=' (bin=around.one.cmpt$in.bin,current.cmpt = around.one.cmpt$extreme.cc)]
#print(ggplot(pwdist.single.c[(compartment.i == unique.c.o.i[i])|(compartment.j == unique.c.o.i[i])]) + geom_line(aes(x=in.bin,y=extreme.cc)) + xlim(0,100))
}
by.pair.extreme.dt <- data.table(integer(0))
by.pair.extreme.dt <- data.table(integer(0))
for(i in 1:length(unique.c.o.i))
{
# id of ith unique compartment number
current.cmpt <- unique.c.o.i[i]
around.one.cmpt <- pwdist.single.c[(compartment.i == current.cmpt) | (compartment.j == current.cmpt)]
by.pair.extreme.dt[,':=' (bin=around.one.cmpt$in.bin,current.cmpt = around.one.cmpt$extreme.cc)]
#print(ggplot(pwdist.single.c[(compartment.i == unique.c.o.i[i])|(compartment.j == unique.c.o.i[i])]) + geom_line(aes(x=in.bin,y=extreme.cc)) + xlim(0,100))
}
by.pair.extreme.dt
by.pair.extreme.dt
around.one.cmpt
pwdist.s.c <- pwdist.single.c
for(i in 1:length(unique.c.o.i))
{
# id of ith unique compartment number
current.cmpt <- unique.c.o.i[i]
around.one.cmpt <- pwdist.single.c[(compartment.i == current.cmpt) | (compartment.j == current.cmpt)]
around.one.cmpt[,c.o.i:=current.cmpt]
#print(ggplot(pwdist.single.c[(compartment.i == unique.c.o.i[i])|(compartment.j == unique.c.o.i[i])]) + geom_line(aes(x=in.bin,y=extreme.cc)) + xlim(0,100))
}
around.one.cmpt
around.one.cmpt
pwdist.s.c <- pwdist.single.c
for(i in 1:length(unique.c.o.i))
{
# id of ith unique compartment number
current.cmpt <- unique.c.o.i[i]
around.one.cmpt <- pwdist.single.c[(compartment.i == current.cmpt) | (compartment.j == current.cmpt)]
around.one.cmpt[,c.o.i:=current.cmpt]
pwdist.s.c <- rbind(pwdist.sc,around.one.cmpt)
#print(ggplot(pwdist.single.c[(compartment.i == unique.c.o.i[i])|(compartment.j == unique.c.o.i[i])]) + geom_line(aes(x=in.bin,y=extreme.cc)) + xlim(0,100))
}
pwdist.s.c <- pwdist.single.c
for(i in 1:length(unique.c.o.i))
{
# id of ith unique compartment number
current.cmpt <- unique.c.o.i[i]
around.one.cmpt <- pwdist.single.c[(compartment.i == current.cmpt) | (compartment.j == current.cmpt)]
around.one.cmpt[,c.o.i:=current.cmpt]
pwdist.s.c <- rbind(pwdist.s.c,around.one.cmpt)
#print(ggplot(pwdist.single.c[(compartment.i == unique.c.o.i[i])|(compartment.j == unique.c.o.i[i])]) + geom_line(aes(x=in.bin,y=extreme.cc)) + xlim(0,100))
}
pwdist.s.c <- pwdist.single.c
pwdist.s.c[,c.o.i:=NA]
for(i in 1:length(unique.c.o.i))
{
# id of ith unique compartment number
current.cmpt <- unique.c.o.i[i]
around.one.cmpt <- pwdist.single.c[(compartment.i == current.cmpt) | (compartment.j == current.cmpt)]
around.one.cmpt[,c.o.i:=current.cmpt]
pwdist.s.c <- rbind(pwdist.s.c,around.one.cmpt)
#print(ggplot(pwdist.single.c[(compartment.i == unique.c.o.i[i])|(compartment.j == unique.c.o.i[i])]) + geom_line(aes(x=in.bin,y=extreme.cc)) + xlim(0,100))
}
warnings()
pwdist.s.c
pwdist.s.c <- pwdist.single.c
pwdist.s.c[,c.o.i:=0]
for(i in 1:length(unique.c.o.i))
{
# id of ith unique compartment number
current.cmpt <- unique.c.o.i[i]
around.one.cmpt <- pwdist.single.c[(compartment.i == current.cmpt) | (compartment.j == current.cmpt)]
around.one.cmpt[,c.o.i:=current.cmpt]
pwdist.s.c <- rbind(pwdist.s.c,around.one.cmpt)
#print(ggplot(pwdist.single.c[(compartment.i == unique.c.o.i[i])|(compartment.j == unique.c.o.i[i])]) + geom_line(aes(x=in.bin,y=extreme.cc)) + xlim(0,100))
}
pwdist.s.c
around.one.cmpt
pwdist.s.c <- pwdist.single.c
#pwdist.s.c[,c.o.i:=0]
for(i in 1:length(unique.c.o.i))
{
# id of ith unique compartment number
current.cmpt <- unique.c.o.i[i]
around.one.cmpt <- pwdist.single.c[(compartment.i == current.cmpt) | (compartment.j == current.cmpt)]
around.one.cmpt[,c.o.i:=current.cmpt]
pwdist.s.c <- rbind(pwdist.s.c,around.one.cmpt)
#print(ggplot(pwdist.single.c[(compartment.i == unique.c.o.i[i])|(compartment.j == unique.c.o.i[i])]) + geom_line(aes(x=in.bin,y=extreme.cc)) + xlim(0,100))
}
pwdist.s.c
around.one.cmpt
current.cmpt <- unique.c.o.i[i]
around.one.cmpt <- pwdist.single.c[(compartment.i == current.cmpt) | (compartment.j == current.cmpt)]
around.one.cmpt
around.one.cmpt[,c.o.i:=current.cmpt]
pwdist.single.c
pwdist.single.c[,c.o.i:=NULL]
pwdist.single.c
pwdist.s.c <- pwdist.single.c
#pwdist.s.c[,c.o.i:=0]
for(i in 1:length(unique.c.o.i))
{
# id of ith unique compartment number
current.cmpt <- unique.c.o.i[i]
around.one.cmpt <- pwdist.single.c[(compartment.i == current.cmpt) | (compartment.j == current.cmpt)]
around.one.cmpt[,c.o.i:=current.cmpt]
pwdist.s.c <- rbind(pwdist.s.c,around.one.cmpt)
#print(ggplot(pwdist.single.c[(compartment.i == unique.c.o.i[i])|(compartment.j == unique.c.o.i[i])]) + geom_line(aes(x=in.bin,y=extreme.cc)) + xlim(0,100))
}
pwdist.single.c
pwdist.s.c
pwdist.s.c <- pwdist.single.c
pwdist.s.c[,c.o.i:=0]
for(i in 1:length(unique.c.o.i))
{
# id of ith unique compartment number
current.cmpt <- unique.c.o.i[i]
around.one.cmpt <- pwdist.single.c[(compartment.i == current.cmpt) | (compartment.j == current.cmpt)]
around.one.cmpt[,c.o.i:=current.cmpt]
pwdist.s.c <- rbind(pwdist.s.c,around.one.cmpt)
#print(ggplot(pwdist.single.c[(compartment.i == unique.c.o.i[i])|(compartment.j == unique.c.o.i[i])]) + geom_line(aes(x=in.bin,y=extreme.cc)) + xlim(0,100))
}
pwdist.s.c
aes(x = "asdf")
my.aes <- aes(x=in.bin,y=extreme.cc,colour = factor(c.o.i))
my.aes <- aes(x=in.bin,y=extreme.cc,colour = factor(c.o.i))
my.aes
ggplot(pwdist.s.c) + geom_line(my.aes) + geom_point(my.aes)
ggplot(pwdist.s.c[c.o.i<8]) + geom_line(my.aes) + geom_point(my.aes)
ggplot(pwdist.s.c[c.o.i<17]) + geom_line(my.aes) + geom_point(my.aes)
ggplot(pwdist.s.c[c.o.i==0]) + geom_line(my.aes) + geom_point(my.aes)
pwdist.single.c
find.extreme.lag <- function(extreme.value)
{
if (extreme.value >0)
{
extreme.lag <- lag.max.cc
}
else if (extreme.value<0)
{
extreme.lag <- lag.min.cc
}
return(extreme.lag)
}
pwdist.single.c[,extreme.lag := find.extreme.lag(extreme.cc),.(index)]
pwdist.single.c
pwdist.single.c
pwdist.single.c[,extreme.lag := 99]
pwdist.single.c
pwdist.single.c[extreme.cc<0]$extreme.lag <- pwdist.single.c[extreme.cc<0]$lag.min.cc
pwdist.single.c[extreme.cc>0]$extreme.lag <- pwdist.single.c[extreme.cc>0]$lag.max.cc
pwdist.single.c
unique.c.o.i <- unique(c(pwdist.single.c$compartment.i,pwdist.single.c$compartment.j))
# copy the data.table, just incase something bad happens
pwdist.s.c <- pwdist.single.c
pwdist.s.c[,c.o.i:=0]
pwdist.s.c
for(i in 1:length(unique.c.o.i))
{
# id of ith unique compartment number
current.cmpt <- unique.c.o.i[i]
around.one.cmpt <- pwdist.single.c[(compartment.i == current.cmpt) | (compartment.j == current.cmpt)]
around.one.cmpt[,c.o.i:=current.cmpt]
pwdist.s.c <- rbind(pwdist.s.c,around.one.cmpt)
#print(ggplot(pwdist.single.c[(compartment.i == unique.c.o.i[i])|(compartment.j == unique.c.o.i[i])]) + geom_line(aes(x=in.bin,y=extreme.cc)) + xlim(0,100))
}
my.aes <- aes(x=in.bin,y=extreme.cc,colour = factor(c.o.i))
ggplot(pwdist.s.c[c.o.i==0]) + geom_line(my.aes) + geom_point(my.aes)
my.aes <- aes(x=in.bin,y=extreme.cc,colour = extreme.lag)
ggplot(pwdist.s.c[c.o.i==0]) + geom_line(my.aes) + geom_point(my.aes)
my.aes <- aes(x=in.bin,y=extreme.lag,colour = factor(c.o.i)
ggplot(pwdist.s.c[c.o.i==0]) + geom_line(my.aes) + geom_point(my.aes)
my.aes <- aes(x=in.bin,y=extreme.lag,colour = factor(c.o.i)
ggplot(pwdist.s.c[c.o.i==0]) + geom_line(my.aes) + geom_point(my.aes)
pwdist.s.c
my.aes <- aes(x=in.bin,y=extreme.lag,colour = factor(c.o.i)
my.aes
my.aes <- aes(x=in.bin,y=extreme.lag,colour = factor(c.o.i))
ggplot(pwdist.s.c[c.o.i==0]) + geom_line(my.aes) + geom_point(my.aes)
ggplot(pwdist.s.c[c.o.i==0]) + geom_line(my.aes) + geom_point(my.aes)
library("ISLR")
install.packages("ISLR")
library("data.table")
library("xlsx")
library("reshape")
library("ggplot2")
library("cowplot")
v.cell.numbers <- data.table(xlsx::read.xlsx("/Users/Poincare/my-diehllab-notebooks/tmclaughlin/2017_02_21_samsonsPaper/numberAnalysis/histogramBindwidthSlider/compartmentsPerCell-immunostained-fromVolker.xlsx", 1))
setnames(v.cell.numbers,'n.compartments.per.cell')
v.cell.numbers[,exp:='immunostained']
v.cell.numbers
v.cell.numbers[n.compartments.per.cell==0]
v.cell.numbers[n.compartments.per.cell!=0]
##### Get compartment size distributions from Samson's data #####
library("data.table")
library("ggplot2")
library("signal")
source("/Users/Poincare/my-diehllab-notebooks/dtsao/matlab_code/load_cmpt_data.R")
source("/Users/Poincare/my-diehllab-notebooks/tmclaughlin/2017_01_12_timeSeriesFrequencyAnalysis/windowedSincTools.R")
# import the data from the image processing pipeline.
exo_ <-load.cmpt.trajs('/Volumes/Public/dtsao/2017-02-15-samson-iqgap-reanalyzed/iqgap_exo-compartments')
exo_11.14.16 <-load.cmpt.trajs('/Volumes/Public/Tyler/delta_domains/myTemp/11-14-16/ransac_analysis_005_02-01-17/WT-WT-Exo70-br1-compartments')
bad.trajs <- exo_[aspect_ratio>2.75][,length(frame),keyby=c('basename','traj_id')]
#STRICTER: bad.trajs <- exo_[aspect_ratio>2][,length(frame),keyby=c('basename','traj_id')]
short.trajs <- exo_[,list(traj_frames=max(last.squassh.frame)- min(first.squassh.frame)),keyby=c('basename','traj_id')][traj_frames<30]
exo_ <-load.cmpt.trajs('/Volumes/Public/dtsao/2017-02-15-samson-iqgap-reanalyzed/iqgap_exo-compartments')
exo_ <-load.cmpt.trajs('/Volumes/Public/dtsao/2017-02-15-samson-iqgap-reanalyzed/iqgap_exo-compartments')
exo_11.14.16 <-load.cmpt.trajs('/Volumes/Public/Tyler/delta_domains/myTemp/11-14-16/ransac_analysis_005_02-01-17/WT-WT-Exo70-br1-compartments')
bad.trajs <- exo_[aspect_ratio>2.75][,length(frame),keyby=c('basename','traj_id')]
#STRICTER: bad.trajs <- exo_[aspect_ratio>2][,length(frame),keyby=c('basename','traj_id')]
short.trajs <- exo_[,list(traj_frames=max(last.squassh.frame)- min(first.squassh.frame)),keyby=c('basename','traj_id')][traj_frames<30]
bad.trajs.2 <- exo_11.14.16[aspect_ratio>2.75][,length(frame),keyby=c('basename','traj_id')]
short.trajs.2 <- exo_11.14.16[,list(traj_frames=max(last.squassh.frame)- min(first.squassh.frame)),keyby=c('basename','traj_id')][traj_frames<30]
setkeyv(exo_, c('basename','traj_id'))
setkeyv(exo_11.14.16, c('basename','traj_id'))
exo <- exo_[!bad.trajs][!short.trajs]
exo.11.14.16 <- exo_11.14.16[!bad.trajs.2][!short.trajs.2]
exo.s <- exo[frame>first.squassh.frame][frame<last.squassh.frame]
exo.11.14.16.s <- exo.11.14.16[frame>first.squassh.frame][frame<last.squassh.frame]
# because there are still ~29 compartments with NA area in exo.s... weird
exo.s <- exo.s[!is.na(area)]
exo.11.14.16.s <- exo.11.14.16.s[!is.na(area)]
# take time averaged position (not using this currently)
averagePosition <- function(x,y)
{
avgPos <- c(mean(x),mean(y))
return(avgPos)
}
exo.s
process.markers
source('../thesis/ru/figures/wt_mut_x.R')
addAreaColumns <- function(dt,pixel.size)
{
pixel.area <- pixel.size*pixel.size
dt[,area.um2:=area*pixel.area,by=c(by.traj_id)]
dt[,rad.um:=sqrt(area.um2/pi),by=c(by.traj_id)]
# i commented these because it's probably nicer to normalize after smoothing.
#dt[,area.norm:=area.um2/max(area.um2),by=c(by.traj_id)]
#dt[,area.norm.smooth:=sgolayfilt(area.norm,p=1,n=5,m=0),by=c(by.traj_id)]
dt[,area.smooth:=sgolayfilt(area.um2,p=1,n=5,m=0),by=c(by.traj_id)]
dt[,area.smooth.norm:=area.smooth/max(area.smooth),by=c(by.traj_id)]
dt[,smoothed.iqgap.fr.int:=sgolayfilt(iqgap.fr,p=1,n=5,m=0),by=c(by.traj_id)]
dt[,smoothed.iqgap.fr.int.norm:=smoothed.iqgap.fr.int/max(smoothed.iqgap.fr.int),by=c(by.traj_id)]
dt[,area.int.product:=smoothed.iqgap.fr.int.norm*area.smooth.norm]
dt[,avg.x:=mean(x_px),by=c(by.traj_id)]
dt[,avg.y:=mean(y_px),by=c(by.traj_id)]
}
addAreaColumns <- function(dt,pixel.size)
{
pixel.area <- pixel.size*pixel.size
dt[,area.um2:=area*pixel.area,by=c(by.traj_id)]
dt[,rad.um:=sqrt(area.um2/pi),by=c(by.traj_id)]
# i commented these because it's probably nicer to normalize after smoothing.
#dt[,area.norm:=area.um2/max(area.um2),by=c(by.traj_id)]
#dt[,area.norm.smooth:=sgolayfilt(area.norm,p=1,n=5,m=0),by=c(by.traj_id)]
dt[,area.smooth:=sgolayfilt(area.um2,p=1,n=5,m=0),by=c(by.traj_id)]
dt[,area.smooth.norm:=area.smooth/max(area.smooth),by=c(by.traj_id)]
dt[,smoothed.iqgap.fr.int:=sgolayfilt(iqgap.fr,p=1,n=5,m=0),by=c(by.traj_id)]
dt[,smoothed.iqgap.fr.int.norm:=smoothed.iqgap.fr.int/max(smoothed.iqgap.fr.int),by=c(by.traj_id)]
dt[,area.int.product:=smoothed.iqgap.fr.int.norm*area.smooth.norm]
dt[,avg.x:=mean(x_px),by=c(by.traj_id)]
dt[,avg.y:=mean(y_px),by=c(by.traj_id)]
return(dt)
}
dt[,area.um2:=area*pixel.area,by=c(by.traj_id)]
exo.s <- addAreaColumns(exo.s)
exo.s <- addAreaColumns(exo.s,0.16)
exo.s
exo.s
exo.11.14.16.s <- addAreaColumns(exo.11.14.16.s, 0.16)
exo.11.14.16.s
exo.s
colnames(exo.s)[which(names(exo.s) == "iqgap.fr")] <- "fusionred.wt"
exo.s
addAreaColumns <- function(dt,pixel.size)
{
pixel.area <- pixel.size*pixel.size
dt[,area.um2:=area*pixel.area,by=c(by.traj_id)]
dt[,rad.um:=sqrt(area.um2/pi),by=c(by.traj_id)]
# i commented these because it's probably nicer to normalize after smoothing.
#dt[,area.norm:=area.um2/max(area.um2),by=c(by.traj_id)]
#dt[,area.norm.smooth:=sgolayfilt(area.norm,p=1,n=5,m=0),by=c(by.traj_id)]
dt[,area.smooth:=sgolayfilt(area.um2,p=1,n=5,m=0),by=c(by.traj_id)]
dt[,area.smooth.norm:=area.smooth/max(area.smooth),by=c(by.traj_id)]
dt[,smoothed.iqgap.fr.int:=sgolayfilt(fusionred.wt,p=1,n=5,m=0),by=c(by.traj_id)]
dt[,smoothed.iqgap.fr.int.norm:=smoothed.iqgap.fr.int/max(smoothed.iqgap.fr.int),by=c(by.traj_id)]
dt[,area.int.product:=smoothed.iqgap.fr.int.norm*area.smooth.norm]
dt[,avg.x:=mean(x_px),by=c(by.traj_id)]
dt[,avg.y:=mean(y_px),by=c(by.traj_id)]
return(dt)
}
exo.11.14.16.s <- addAreaColumns(exo.11.14.16.s, 0.16)
exo.11.14.16.s
my.cell = 5
dt.single.c <- exo.s[cell==my.cell]
ggplot(dt.single.c) + geom_line(aes(x=frame,y=area.smooth.norm,color=traj_id))
ggplot(dt.single.c) + geom_line(aes(x=frame,y=area.int.product,color=traj_id))
addAreaColumns <- function(dt,pixel.size)
{
pixel.area <- pixel.size*pixel.size
dt[,area.um2:=area*pixel.area,by=c(by.traj_id)]
dt[,rad.um:=sqrt(area.um2/pi),by=c(by.traj_id)]
# i commented these because it's probably nicer to normalize after smoothing.
#dt[,area.norm:=area.um2/max(area.um2),by=c(by.traj_id)]
#dt[,area.norm.smooth:=sgolayfilt(area.norm,p=1,n=5,m=0),by=c(by.traj_id)]
dt[,area.smooth:=sgolayfilt(area.um2,p=1,n=5,m=0),by=c(by.traj_id)]
dt[,area.smooth.norm:=area.smooth/max(area.smooth),by=c(by.traj_id)]
dt[,smoothed.iqgap.fr.int:=sgolayfilt(fusionred.wt,p=1,n=5,m=0),by=c(by.traj_id)]
dt[,smoothed.iqgap.fr.int.norm:=smoothed.iqgap.fr.int/max(smoothed.iqgap.fr.int),by=c(by.traj_id)]
dt[,area.int.product:=smoothed.iqgap.fr.int.norm*area.smooth.norm]
dt[,deriv.area.int.product:=sgolayfilt(area.int.product,n=9,m=1,p=1,ts=first(frame_interval_sec)),by=c(by.traj_id)]
dt[,avg.x:=mean(x_px),by=c(by.traj_id)]
dt[,avg.y:=mean(y_px),by=c(by.traj_id)]
return(dt)
}
exo.s <- exo[frame>first.squassh.frame][frame<last.squassh.frame]
exo.11.14.16.s <- exo.11.14.16[frame>first.squassh.frame][frame<last.squassh.frame]
# because there are still ~29 compartments with NA area in exo.s... weird
exo.s <- exo.s[!is.na(area)]
exo.11.14.16.s <- exo.11.14.16.s[!is.na(area)]
colnames(exo.s)[which(names(exo.s) == "iqgap.fr")] <- "fusionred.wt"
exo.s <- addAreaColumns(exo.s,0.16)
exo.11.14.16.s <- addAreaColumns(exo.11.14.16.s, 0.16)
ggplot(dt.single.c) + geom_line(aes(x=frame,y=deriv.area.int.product,color=traj_id))
exo.s
exo.11.14.16.s
dt.single.c
my.cell = 5
dt.single.c <- exo.s[cell==my.cell]
ggplot(dt.single.c) + geom_line(aes(x=frame,y=deriv.area.int.product,color=traj_id))
sgolayfilt.trim <- function(x, p = 3, n = p + 3 - p%%2, m = 0, ts = 1) {
d <- sgolayfilt(x, p, n=n,m=m,ts=ts)
L <- length(x)
d[1:floor(n/2)] = NA
d[(L-floor(n/2)+1):L] = NA
d
}
addAreaColumns <- function(dt,pixel.size)
{
pixel.area <- pixel.size*pixel.size
dt[,area.um2:=area*pixel.area,by=c(by.traj_id)]
dt[,rad.um:=sqrt(area.um2/pi),by=c(by.traj_id)]
# i commented these because it's probably nicer to normalize after smoothing.
#dt[,area.norm:=area.um2/max(area.um2),by=c(by.traj_id)]
#dt[,area.norm.smooth:=sgolayfilt(area.norm,p=1,n=5,m=0),by=c(by.traj_id)]
dt[,area.smooth:=sgolayfilt(area.um2,p=1,n=5,m=0),by=c(by.traj_id)]
dt[,area.smooth.norm:=area.smooth/max(area.smooth),by=c(by.traj_id)]
dt[,smoothed.iqgap.fr.int:=sgolayfilt(fusionred.wt,p=1,n=5,m=0),by=c(by.traj_id)]
dt[,smoothed.iqgap.fr.int.norm:=smoothed.iqgap.fr.int/max(smoothed.iqgap.fr.int),by=c(by.traj_id)]
dt[,area.int.product:=smoothed.iqgap.fr.int.norm*area.smooth.norm]
dt[,deriv.area.int.product:=sgolayfilt.trim(area.int.product,n=9,m=1,p=1,ts=first(frame_interval_sec)),by=c(by.traj_id)]
dt[,avg.x:=mean(x_px),by=c(by.traj_id)]
dt[,avg.y:=mean(y_px),by=c(by.traj_id)]
return(dt)
}
exo.s <- exo[frame>first.squassh.frame][frame<last.squassh.frame]
exo.11.14.16.s <- exo.11.14.16[frame>first.squassh.frame][frame<last.squassh.frame]
# because there are still ~29 compartments with NA area in exo.s... weird
exo.s <- exo.s[!is.na(area)]
exo.11.14.16.s <- exo.11.14.16.s[!is.na(area)]
# change column name to make it the same as the other data.table, exo.11.14.16.s
colnames(exo.s)[which(names(exo.s) == "iqgap.fr")] <- "fusionred.wt"
exo.s <- addAreaColumns(exo.s,0.16)
exo.11.14.16.s <- addAreaColumns(exo.11.14.16.s, 0.16)
my.cell = 5
dt.single.c <- exo.s[cell==my.cell]
ggplot(dt.single.c) + geom_line(aes(x=frame,y=deriv.area.int.product,color=traj_id))
exo.s
my.cell = 1
dt.single.c <- exo.s[cell==my.cell]
ggplot(dt.single.c) + geom_line(aes(x=frame,y=deriv.area.int.product,color=traj_id))
acf(dt.single.c(traj_id==10)$deriv.area.int.product)
acf(dt.single.c[traj_id==10]$deriv.area.int.product)
dt.single.c[traj_id==10]$deriv.area.int.product
acf(dt.single.c[traj_id==10]$deriv.area.int.product,na.action = na.pass)
acf(sin(seq(0,8*pi,30)))
acf(sin(seq(0,8*pi,300)))
sin(seq,0,8*pi,300)
sin(seq(0,8*pi,300))
seq(0,8*pi,300)
seq(1,8*pi,300)
seq(1,300)
seq(1,300,.1)
seq(1,30,.1)
sin(seq(1,8*pi,300))
sin(seq(1,30,.1))
acf(sin(seq(1,30,.1)))
acf(sin(seq(1,30,.1)),lag.max=30)
acf(dt.single.c[traj_id==9]$deriv.area.int.product,na.action = na.pass)
acf(dt.single.c[traj_id==11]$deriv.area.int.product,na.action = na.pass)
acf(dt.single.c[traj_id==14]$deriv.area.int.product,na.action = na.pass)
acf(dt.single.c[traj_id==15]$deriv.area.int.product,na.action = na.pass)
acf(dt.single.c[traj_id==16]$deriv.area.int.product,na.action = na.pass)
acf(dt.single.c[traj_id==17]$deriv.area.int.product,na.action = na.pass)
acf(dt.single.c[traj_id==18]$deriv.area.int.product,na.action = na.pass)
acf(dt.single.c[traj_id==19]$deriv.area.int.product,na.action = na.pass)
acf(dt.single.c[traj_id==20]$deriv.area.int.product,na.action = na.pass)
acf(dt.single.c[traj_id==20]$deriv.area.int.product,na.action = na.pass,lag.max=30)
acf(dt.single.c[traj_id==21]$deriv.area.int.product,na.action = na.pass,lag.max=30)
acf(dt.single.c[traj_id==22]$deriv.area.int.product,na.action = na.pass,lag.max=30)
acf(dt.single.c[traj_id==24]$deriv.area.int.product,na.action = na.pass,lag.max=30)
exo.s
ggplot(dt.single.c) + geom_line(aes(x=frame,y=deriv.area.int.product,color=traj_id))
nrow(dt.single.c[traj_id==13])
dt.single.c[traj_id==13]
dt.single.c[traj_id==14]
nrow(dt.single.c[traj_id==14])
ggplot(dt.single.c) + geom_path(aes(x=x_px,y=y_px,color=traj_id))
?setkey
dt.c <- dt.single.c
dt.single.c[setkey(dt.single.c[,min(frames):max(frames),by=traj_id],traj_id)]
dt.single.c[setkey(dt.single.c[,min(frame):max(frame),by=traj_id],traj_id)]
dt.single.c
dt.c
dt.single.c
ccf(dt.single.c[traj_id==10]$deriv.area.int.product,dt.single.c[traj_id==11]$deriv.area.int.product)
ccf(dt.single.c[traj_id==10]$deriv.area.int.product,dt.single.c[traj_id==11]$deriv.area.int.product,na.action=na.pass)
ccf(dt.single.c[traj_id==10]$deriv.area.int.product,dt.single.c[traj_id==11]$deriv.area.int.product,na.action=na.pass,lag.max=30)
ccf(dt.single.c[traj_id==10]$deriv.area.int.product,dt.single.c[traj_id==14]$deriv.area.int.product,na.action=na.pass,lag.max=30)
ggplot(dt.single.c) + geom_line(aes(x=frame,y=deriv.area.int.product,color=traj_id))
ggplot(dt.single.c) + geom_path(aes(x=x_px,y=y_px,color=traj_id))
ccf(dt.single.c[traj_id==10]$deriv.area.int.product,dt.single.c[traj_id==11]$deriv.area.int.product,na.action=na.pass,lag.max=30)
ccf(dt.single.c[traj_id==10]$deriv.area.int.product,dt.single.c[traj_id==14]$deriv.area.int.product,na.action=na.pass,lag.max=30)
ccf(dt.single.c[traj_id==15]$deriv.area.int.product,dt.single.c[traj_id==14]$deriv.area.int.product,na.action=na.pass,lag.max=30)
ccf(dt.single.c[traj_id==15]$deriv.area.int.product,dt.single.c[traj_id==16]$deriv.area.int.product,na.action=na.pass,lag.max=30)
ccf(dt.single.c[traj_id==15]$deriv.area.int.product,dt.single.c[traj_id==14]$deriv.area.int.product,na.action=na.pass,lag.max=30)
ccf(dt.single.c[traj_id==15]$deriv.area.int.product,dt.single.c[traj_id==16]$deriv.area.int.product,na.action=na.pass,lag.max=30)
ccf(dt.single.c[traj_id==15]$deriv.area.int.product,dt.single.c[traj_id==17]$deriv.area.int.product,na.action=na.pass,lag.max=30)
ccf(dt.single.c[traj_id==15]$deriv.area.int.product,dt.single.c[traj_id==19]$deriv.area.int.product,na.action=na.pass,lag.max=30)
ccf(dt.single.c[traj_id==17]$deriv.area.int.product,dt.single.c[traj_id==19]$deriv.area.int.product,na.action=na.pass,lag.max=30)
ccf(dt.single.c[traj_id==17]$deriv.area.int.product,dt.single.c[traj_id==10]$deriv.area.int.product,na.action=na.pass,lag.max=30)
aov?
?aov
?aov
aov
apropos(aov)
apropos(table)
apropos(table)
apropos()
?apropos
apropos("table")
x <- runif(1e3)
microbenchmark(
sum(x),
sumC(x),
sumR(x)
)
x
library(microbenchmark)
library("microbenchmark")
install.packages("microbenchmark")
Rcpp::sourceCpp('kinsen/cppProjects/rcpp/firstMeanFunction.cpp')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document', echo=TRUE)
source('~/kinsen/datacamp/rstudioBlueYellowWarnings.R', echo=TRUE)
source('~/kinsen/datacamp/rstudioBlueYellowWarnings.R', echo=TRUE)
int n = x.size();
double meanC(NumericVector x) {
int n = x.size();
double total = 0;
for(int i = 0; i < n; ++i) {
total += x[i];
}
return total / n;
}
#include <Rcpp.h>
using namespace Rcpp;
// [[Rcpp::export]]
double meanC(NumericVector x) {
total
for(int i = 0; i < n; ++i) {
total += x[i];
}
return total / n;
for(int i = 0; i < n; ++i) {
total += x[i];
}
return total / n;
int n = x.size();
source('~/kinsen/datacamp/rstudioBlueYellowWarnings.R', echo=TRUE)
source('~/kinsen/datacamp/rstudioBlueYellowWarnings.R', echo=TRUE)
source('~/kinsen/datacamp/rstudioBlueYellowWarnings.R', echo=TRUE)
traceback
traceback()
library('ggplot2')
symmetrize
?symmetrize
source('~/kinsen/UTHworkshop/UTH-shiny/code/dataVizUtil/')
?symmetrize
symmetrize
symmetrize()
source('~/kinsen/UTHworkshop/UTH-shiny/code/dataVizUtil/R')
symmetrize()
source('~/kinsen/UTHworkshop/UTH-shiny/code/dataVizUtil/R/functions.R')
?R
source('~/kinsen/UTHworkshop/UTH-shiny/code/dataVizUtil/R/functions.R')
symmetrize
?symmetrize
rep()
rep
?rep
setwd("~/kinsen/UTHworkshop/UTH-shiny")
knitr::opts_chunk$set(echo = TRUE)
source('./code/dataVizUtil/R/functions.R')
library("ggplot2")
anscombe <- data.table(read.csv('./data/anscombe.csv'))
dt.grd <- data.table(read.table('./data/gremlinContacts_962-1345.txt',header = TRUE))
